★ class - getter setter
: 변수명과 같은 함수를 만들어 getter와 setter를 선언해 사용한다.
def setEng(), def getEng() 로 선언해서 사용했었다. 그런데 이렇게 하지 말고 아래처럼해라.

    def __init__(self) :
        self.__haknum = random2.randint(1,100)
        self.__kor = random2.randint(1,100)
        self.__math = random2.randint(1,100)
        self.__eng = random2.randint(1,100)
        self.__total = random2.randint(1,100)
        
    def display(self):
        print(self.__kor, '+', self.__eng, '+', self.__math, '=', self.__total)
    
    @property
    def kor(self): #getter
        return self.__kor
    
    @kor.setter
    def kor(self, score): # setter
        if score > 0:
            self.__kor = score

★ private, protected, public
private   = __x
protected = _x
public    = x

★ 클래스매서드
생성한 객체의 개수를 세고자 할 때를 예로 듦.
Person.display()인 이유는 클래스 관점에서 객체를 몇개 생성했는지 체크한것이기 때문이다.
ex) kai.display()가 아니라 Person.display()이다.

class Person:
    count = 0

    def __init__(self):
        self.name = ''
        Person.count += 1
    
    @classmethod
    def display(cls):
        print('count=', Person.count)

james = Person()
kai = Person()
a = Person()
Person.display()
